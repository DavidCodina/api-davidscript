name: Build, Lint, Test
on:
  # https://docs.github.com/en/actions/using-workflows
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request

  #--------------------------------------------------------------------------
  #
  # Note:
  #
  # https://www.udemy.com/course/github-actions-the-complete-guide/learn/lecture/34138630#overview
  # Pull Request from contributors that forked will not occur automatically, but instead require approval.
  # Why? Because obviously you don't want to automatically deploy from forked users.
  # By default, pull requests based on forks do not trigger workflows.
  # First-time contributors must be approved manually. Subsequent PRs will be triggered
  # automatically. That said, if you add a collaborator and they do a first PR, it will
  # trigger automatially on the first time.
  #
  #--------------------------------------------------------------------------
  pull_request:
    branches:
      - main
      - master
      - development
      - dev
  workflow_dispatch:
jobs:
  lint: # The name of job is arbitrary.
    # The actual name used here is important because it allows us to search for
    # the correct status check when Requiring status checks to pass before merging.
    # This is set up in GitHub branch --> Settings --> Branches.
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      # https://github.com/marketplace/actions/checkout
      # https://github.com/actions/checkout
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      # Cache dependencies. Must be done in all jobs that install dependencies.
      # This seems to speed up the process by about 20s.
      # https://www.udemy.com/course/github-actions-the-complete-guide/learn/lecture/34139976#overview
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Lint src
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        run: npm ci
      - name: Run Tests
        run: npm test
